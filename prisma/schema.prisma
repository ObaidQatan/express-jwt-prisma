generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  scopeId           String
  role              Role
  password          String
  provider          String
  providerAccountId String
  lastRecord        DateTime @updatedAt
  refreshToken      String?  @db.Text
  accessToken       String?  @db.Text
  expiresAt         Int?
  tokenType         String?
  idToken           String?  @db.Text
  sessionState      String?

  scope Scope @relation(fields: [scopeId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  // @@unique([provider, providerAccountId])
}

model Scope {
  id     String  @id @default(cuid())
  read   Boolean @default(false)
  create Boolean @default(false)
  delete Boolean @default(false)
  update Boolean @default(false)

  accounts Account[]
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   Boolean?
  emailVerifiedAt DateTime?
  imageUrl        String?
  accounts        Account[]
  sessions        Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  ADMIN
  USER
  GUEST
}
